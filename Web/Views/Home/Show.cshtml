@model Compilify.Web.Models.PostViewModel

<div id="ide">
    @using (Html.BeginForm())
    {
        <div id="commands">
            <a class="js-new" href="/">new</a>
            <a class="js-save" href="#">save</a>
            <a class="js-run" href="#">run</a>
        </div>
    
        <div id="editors">
            <div class="editor-container">
                <div id="define" class="editor">
                    @{ var classes = Model.Documents.FirstOrDefault(x => x.Name == "Classes"); }
                    <textarea data-name="@classes.Name">@classes.Text</textarea>
                </div>
            </div>
            <div class="editor-container">
                <div id="execute" class="editor">
                    @{ var content = Model.Documents.FirstOrDefault(x => x.Name == "Content"); }
                    <textarea data-name="@content.Name">@content.Text</textarea>
                </div>
            </div>
        </div>
    
        <div id="footer">
            <div class="results">
                <pre></pre>
            </div>
        
            @{ var hasErrors = Model.Errors != null && Model.Errors.Any(); }
        
            <div class="status @(hasErrors ? "status-error" : "status-success")">
                
                <div class="loading-indicator">
                    <span></span>
                </div>
                

                @*
                This should remain partially hidden most of the time. When the user hovers over it, it should appear to 
                rise from below the browser window to display any messages it might contain.
                
                An indicator could also be displayed here when loading content or waiting for the result of an execution.
                
                The color of the status bar should change based on the status of the user's code:

                    * Red - there are errors in the user's code
                    * Green - there are no errors in the user's code

                Other future possibilities include:

                    * Yellow - there are warnings in the user's code 
                *@
            
                <ul class="messages">
                    @if (!hasErrors)
                    {
                        <li>No errors!</li>
                    }
                    else
                    {
                        foreach (var error in Model.Errors)
                        {
                            <li>@error.Message</li>
                        }
                    }
                </ul>
            </div>
        </div>
    }
</div>