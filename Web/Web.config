<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <sectionGroup name="dotNetOpenAuth" type="DotNetOpenAuth.Configuration.DotNetOpenAuthSection, DotNetOpenAuth.Core">
      <section name="messaging" type="DotNetOpenAuth.Configuration.MessagingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" />
      <section name="reporting" type="DotNetOpenAuth.Configuration.ReportingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" />
      <section name="openid" type="DotNetOpenAuth.Configuration.OpenIdElement, DotNetOpenAuth.OpenId" requirePermission="false" allowLocation="true" />
    </sectionGroup>
  </configSections>

  <appSettings>
    <!-- MVC Settings -->
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
    <add key="webpages:Version" value="2.0.0.0" />
    <add key="webpages:Enabled" value="false" />
    <add key="PreserveLoginUrl" value="true" />
    <add key="ClientValidationEnabled" value="true" />
    <add key="UnobtrusiveJavaScriptEnabled" value="true" />

    <!-- Application Settings -->
    <add key="Compilify.ExecutionTimeout" value="30" />

    <!-- Replaced by AppHarbor -->
    <add key="MONGOLAB_URI" value="mongodb://localhost/Compilify" />
    <add key="REDISTOGO_URL" value="redis://localhost:6379" />
  </appSettings>

  <connectionStrings>
    <clear />
  </connectionStrings>

  <dotNetOpenAuth>
    <messaging>
      <untrustedWebRequest>
        <whitelistHosts>
          <!-- Uncomment to enable communication with localhost (should generally not activate in production!) -->
          <!--<add name="localhost" />-->
        </whitelistHosts>
      </untrustedWebRequest>
    </messaging>
    <!-- Allow DotNetOpenAuth to publish usage statistics to library authors to improve the library. -->
    <reporting enabled="true" />
    <openid>
      <relyingParty>
        <security requireSsl="false">
          <!-- Uncomment the trustedProviders tag if your relying party should only accept positive assertions from a closed set of OpenID Providers. -->
          <!--<trustedProviders rejectAssertionsFromUntrustedProviders="true">
            <add endpoint="https://www.google.com/accounts/o8/ud" />
          </trustedProviders>-->
        </security>
        <behaviors>
          <!-- The following OPTIONAL behavior allows RPs to use SREG only, but be compatible
               with OPs that use Attribute Exchange (in various formats). -->
          <add type="DotNetOpenAuth.OpenId.RelyingParty.Behaviors.AXFetchAsSregTransform, DotNetOpenAuth.OpenId.RelyingParty" />
        </behaviors>
      </relyingParty>
    </openid>
  </dotNetOpenAuth>
  
  <system.net>
    <defaultProxy enabled="true" />
    <settings>
      <!-- This setting causes .NET to check certificate revocation lists (CRL) 
           before trusting HTTPS certificates.  But this setting tends to not 
           be allowed in shared hosting environments. -->
      <!--<servicePointManager checkCertificateRevocationList="true"/>-->
    </settings>
  </system.net>
  
  <system.web>
    <authentication mode="None">
      <!--<forms name="uid" defaultUrl="~/" loginUrl="~/auth/signin" path="/" timeout="2880" protection="All" ticketCompatibilityMode="Framework40" />-->
    </authentication>
    
    <compilation debug="true" targetFramework="4.0" />

    <httpRuntime enableVersionHeader="false" />

    <customErrors mode="RemoteOnly" redirectMode="ResponseRewrite" defaultRedirect="~/error/500">
      <error statusCode="403" redirect="~/error/403" />
      <error statusCode="404" redirect="~/error/404" />
    </customErrors>

    <membership>
      <providers>
        <clear />
        <!--<add name="MongoDbMembershipProvider"
                 type="Compilify.Web.Infrastructure.Providers.MongoDBMembershipProvider"
                 applicationName="Compilify" database="Compilify" collection="users" />-->
      </providers>
    </membership>
    
    <pages>
      <namespaces>
        <add namespace="System.Web.Helpers" />
        <add namespace="System.Web.Mvc" />
        <add namespace="System.Web.Mvc.Ajax" />
        <add namespace="System.Web.Mvc.Html" />
        <add namespace="System.Web.Optimization" />
        <add namespace="System.Web.Routing" />
        <add namespace="System.Web.WebPages" />
        <add namespace="Compilify.Web.Infrastructure.Extensions" />
      </namespaces>
    </pages>
    
    <profile enabled="false">
      <providers>
        <clear />
      </providers>
    </profile>
    
    <roleManager enabled="false">
      <providers>
        <clear />
      </providers>
    </roleManager>
  </system.web>

  <system.webServer>
    <httpErrors existingResponse="PassThrough" />
    
    <httpProtocol>
      <customHeaders>
        <clear />
        <add name="X-UA-Compatible" value="IE=Edge,chrome=1" />
      </customHeaders>
    </httpProtocol>
    
    <modules runAllManagedModulesForAllRequests="true" />
    
    <rewrite>
      <rules>
        <rule name="Lower Case URLs" stopProcessing="true">
          <match url="[A-Z]" ignoreCase="false" />
          <action type="Redirect" url="{ToLower:{URL}}" redirectType="Permanent" />
        </rule>
      </rules>
    </rewrite>
    
    <staticContent>
      <mimeMap fileExtension=".woff" mimeType="application/x-font-woff" />
    </staticContent>
    
    <validation validateIntegratedModeConfiguration="false" />
  </system.webServer>
  
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Autofac" publicKeyToken="17863af14b0044da" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.6.3.862" newVersion="2.6.3.862" />
      </dependentAssembly>
    </assemblyBinding>
    
    <legacyHMACWarning enabled="0" />
  </runtime>
  
  <uri>
    <!-- The uri section is necessary to turn on .NET 3.5 support for IDN (international domain names),
         which is necessary for OpenID urls with unicode characters in the domain/host name. 
         It is also required to put the Uri class into RFC 3986 escaping mode, which OpenID and OAuth require. -->
    <idn enabled="All" />
    <iriParsing enabled="true" />
  </uri>
</configuration>
